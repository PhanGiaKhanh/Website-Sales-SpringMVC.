==========================***** Sử dụng layout cho nhiều trang con Ex: /manage/* by decorator of sitemesh ====================
B1 > pom.xml
<!-- sitemesh -->
<dependency>
	<groupId>opensymphony</groupId>
	<artifactId>sitemesh</artifactId>
	<version>2.4.1</version>
</dependency>
B2 > web.xml
<filter>
	<filter-name>sitemesh</filter-name>
	<filter-class>com.opensymphony.sitemesh.webapp.SiteMeshFilter
	</filter-class>
	<init-param>
		<param-name>contextConfigLocaltion</param-name>
		<param-value>/WEB-INF/demo-config-servlet.xml</param-value>
	</init-param>
	<load-on-startup>1</load-on-startup>
</filter>
<filter-mapping>
	<filter-name>sitemesh</filter-name>
	<url-pattern>/*</url-pattern>
</filter-mapping>
B3 > decorators.xml
<!-- Khai báo đường dẫn cho decorators tìm đến lấy decorator -->
<decorators defaultdir="/WEB-INF/views/layouts">
	<!-- Lấy các file gọi tới đường dẫn /* truyền vào user.jsp -->
	<decorator name="user" page="user.jsp">
		<pattern>/*
		</pattern>
	</decorator>
	<decorator name="admin" page="admin.jsp">
		<pattern>/manage/*
		</pattern>
	</decorator>
</decorators>

================= ***** Decorators with <title> ========================================
B1 >> user.jsp 
<title><decorator:title default="Master-Layout"/></title>

B2 >> <file>.jsp
khai báo title EX: index.jsp 
<title>Home</title>

================= ***** add file <assests> for all file jsp=================================
<JSTL> https://www.javatpoint.com/jstl-core-tags

1 >> pom.xml 
<!-- jstl -->
<dependency>
    <groupId>jstl</groupId>
    <artifactId>jstl</artifactId>
    <version>1.2</version>
</dependency>

2 >>  file.jsp
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %> 

3 >> diamon-config-servlet.xml
add <Beans
xmlns:mvc="http://www.springframework.org/schema/mvc"

xsi::schemaLocation= ....  http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
> 

<!-- Connect file assets  -->
<mvc:annotation-driven />
<mvc:resources location="/assets/" mapping="/assets/**" />
<!-- ** lấy tất cả  -->

4 >> file.jsp >> thay hết
<link href="<c:url value="/assets/user/css/bootstrap.css"/>" rel="stylesheet" />

5 >> header of eclipse >> Project >> clean >> Clean

================***** auto run method when run project =======  BaseController==========================
*** Tạo ModelAndView tích hợp sẵn data dùng chung ***

B1 >>
<!-- https://mvnrepository.com/artifact/javax.annotation/javax.annotation-api -->
<dependency>
    <groupId>javax.annotation</groupId>
    <artifactId>javax.annotation-api</artifactId>
    <version>1.3.2</version>
</dependency>

B2 >>  add @PostConstruct

@PostConstruct
public ModelAndView init() {
	baseModelAndView.addObject("menus", baseHomeService.getDataMenus());
	return baseModelAndView;
}

================***** Để product xuất hiện random =======  ProductsDao ==========================
sql.append("ORDER BY RAND() ");

================***** Format jstl  >>> MONEY =======  WEB-INF/views/user/index.jsp==========================
https://www.javatpoint.com/jstl-formatting-tags
https://www.javatpoint.com/jstl-fmt-formatnumber-tag

<fmt:formatNumber type="number" groupingUsed="true" value="${Amount}" />

================***** Sử dụng query by if (condition) {  } =======  ProductsDao ==========================
...
StringBuffer sql = sqlString();
	sql.append("WHERE 1 = 1 ");
	if (newProdut) {
		sql.append("AND p.highlight = true ");
	}
	if (highlight) {
		sql.append("AND p.product_new = true ");
	}
	sql.append("GROUP BY p.id, c.product_id ");
	sql.append("ORDER BY RAND() ");
...

================***** Create logic Paginates (Phân trang ) quá hay =======  PaginatesImpl.java ==========================

================***** Use Map<Integer, CartDto> cart=======  CartDao.java==========================
public int totalQuantity(Map<Integer, CartDto> cart) {
	int totalQuantity = 0;
	for (Map.Entry<Integer, CartDto> itemCart : cart.entrySet()) {
		totalQuantity += itemCart.getValue().getQuantity();
	}
	// On Java 10+:
	// for (var entry : map.entrySet()) {
	// 	...;
	// }
	return totalQuantity;
}

================***** HttpServletRequest request =======  CartController =========================='
@GetMapping(value = "addCart/{id}")
public String addCart(@PathVariable int id, HttpSession session, HttpServletRequest request) {
	...
	return "redirect:" + request.getHeader("Referer");
}
## Sử dụng <Thêm sản phẩm vào giỏ hàng> cho trang <Trang chủ> và <Chi tiết sản phẩm>


